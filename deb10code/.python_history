import sys
from scipy.io import wavfile
import whale_call_detection as wcd
fs, data = wavfile.read("Yaquina_true.wav")
type(fs)
fs
type(data)
dir(wcd)
whale_statistics_dict=wcd.blue_whale_call_statistics
conv_kernel=large_kernel_45
wcd.detect_whale_call_from_audio(data, fs)
from ftplib import FTP
ftp = FTP('ftp.us.debian.org')
ftp = FTP('ftp.pmel.noaa.gov')
ftp.login()
ftp.retrlines('LIST') 
ftp.cwd('newport')
ftp.retrlines('LIST') 
ftp.cwd('kahn')
ftp.retrlines('LIST') 
ftp.retrlines('DIR') 
ftp.retrlines('ls') 
ftp.retrbinary('retr readme', fp.write)
ftp.retrbinary('retr readme', print)
with open('README', 'wb') as fp:
    ftp.retrbinary('RETR README', fp.write)
with open('README', 'wb') as fp:
    ftp.retrbinary('retr readme', fp.write)
with open('README', 'wb') as fp:
    ftp.retrbinary('retr README', fp.write)
ftp.nlst()
ftp = FTP('ftp.us.debian.org')
ftp.nlst()
ftp.login()
ftp.nlst()
import shutil
type(shutil.move())
type(shutil.move)
quit()
import sys
from scipy.io import wavfile
import whale_call_detection as wcd
audio_file_path=../SCW2067_20210826_161200.wav
audio_file_path="../SCW2067_20210826_161200.wav"
fs, data = wavfile.read(audio_file_path)
fs
wcd.detect_whale_call_from_audio(data, fs)
import serial.tools.list_ports
serial.tools.list_ports.comports()[0].device
serial.tools.list_ports.comports()
from ftplib import FTP
ftp = FTP('192.168.3.3')
quit()
